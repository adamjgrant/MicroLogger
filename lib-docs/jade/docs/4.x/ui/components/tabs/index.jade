extends ../../../_layout

block variables
  - var showFooter = false
  - var title = "Tabs"

block hero-title
  h1 Tabs

block ui-stylesheet
  link(rel="stylesheet" href="/css/pages/docs/ui/tabs.min.css")

block documents
  .document
    article.article
      :markdown
        Creating a tab is the same as creating a basic HTML document
        where anchor links navigate to defined sections of the page.

        With the styling and JavaScript in place, these links and document
        sections will automatically show and hide as you would expect from
        a tabbed content area.

        Remember the `data-ks-tabs` attribute.

      ul.tabs#tab-example2(data-ks-tabs)
        li.open: a(href="#modern") Modern
        li: a(href="#old") Old
        li: a(href="#ancient") Ancient

      .tab_pane_container
        article#modern Internet
        article#old Encyclopedia
        article#ancient Papyrus

    article.code
      :markdown
        <span>

            <ul class="tabs" id="ages" data-ks-tabs>
              <li class="open">
                <a href="#modern">Modern</a>
              </li>
              <li>
                <a href="#old">Old</a>
              </li>
              <li>
                <a href="#ancient">Ancient</a>
              </li>
            </ul>

            <div class="tab_pane_container">
              <article id="modern">
                Internet
              </article>
              <article id="old">
                Encyclopedia
              </article>
              <article id="ancient">
                Papyrus
              </article>
            </div>

      .if-semantic
        :markdown
          <span>

              .tabs {
                @include tabs();
              }
              .tab_pane_container {
                @include tab_pane_container();
              }

  .document
    article.article
      :markdown
        Optionally, you can omit the data attribute and instantiate the tabs via `k$.tabs()` 
        Pass in either the string that selects the selector of the ul that will become the tab bar,
        or the element itself.

    article.code
      :markdown
        <span>

            k$.tabs('#ages');

            // or
            
            $tabs = document.querySelector('#ages');
            k$.tabs($tabs);
