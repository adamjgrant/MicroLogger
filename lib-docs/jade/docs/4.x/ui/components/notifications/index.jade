extends ../../../_layout

block hero-title
  h1 Notifications

block variables
  - var showFooter = false
  - var title = "Notifications" 

block ui-stylesheet
  link(rel="stylesheet" href="/css/pages/docs/ui/notifications.min.css") 

block documents
  .document 
    article.article.article-full
      :markdown
        Notifications give your site an application-like feel by providing dynamic
        messaging components that work in real time and organize themselves.
      a.button.blue#example-showStatus Show Status
      | &nbsp;
      a.button.blue#example-showGrowl Show Growl 

  .document
    article.article
      :markdown

        # Statuses

        Statuses are once-only notifications best for streaming system information.
        Once-only means each new status replaces its previous one and only one shows
        at a time. See [throttling](/docs/3.x/functions/throttling/) for more
        information

    article.code
      :markdown
        <span>

            k$.status({
              text: 'Saved successfully',
              type: 'status-green'
            })

  .document
    article.article
      :markdown
        ## Options

        Statuses take additional parameters to allow you to hold on to them for
        longer, even forever, and style them appropriately.

      +available-colors('status')

    article.code
      :markdown
        <span>

            // Defaults are shown

            k$.status({
              text: 'Saved successfully', // No default
              delay: 2000, // Optional, 0 = forever
              type: 'status-yellow', // Optional, yellow is default
              id: '' // Optional, for targeting with JavaScript
            }) 

  .document
    article.article
      :markdown
        # Growls

        Growls are stackable, right-aligned notifications. Unlike statuses, creating
        one growl does not replace the existing one. Each Growl has its own delay
        and styling properties. Unlike statuses, they are also dismissable like a
        modal.

    article.code
      :markdown
        <span>

            // Defaults are shown

            k$.growl({
              title: 'Greetings'
            })

  .document
    article.article
      :markdown
        ## Options

        Growls have similar flexibility as statuses.

    article.code
      :markdown
        <span>

            // Defaults are shown

            k$.growl({
              title: 'Greetings',
              text: 'We\'re happy to inform you your document was saved.', // Optional
              delay: 2000, // Optional, 0 = forever
              type: 'alert-warn', // Optional
              id: 'token' // Optional
            })

  .document
    article.article.article-full
      :markdown
        Growls are also fed through `k$.buffer` as a UX concern to prevent
        overloading the screen with messages. By default, only one growl can show per
        half second. Subsequent growls will be buffered and shown after others have
        been dismissed. See [buffers](/docs/#{docsVersion}/throttling) for more
        information.

  .document
    article.article
      .if-semantic
        :markdown 
          To use different stylings, just pass in a class name to the `type` property.
          By default, this is appended as a class on `.growl`

      .ifnot-semantic
        :markdown
          To use different stylings, just borrow from one of the alert color classes.
          (Growls inherit from the alert styles)

    article.code
      :markdown
        <span>

            k$.growl({
              title: 'It worked!',
              type: 'alert-success'
            })

      .if-semantic
        :markdown
          <span>

              .growl {
                &.alert-success {
                  background: map-get($colors, green);
                }
              }
