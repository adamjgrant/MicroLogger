extends ../../../_layout

block hero-title
  h1 Modals

block variables
  - var showFooter = false
  - var title = "Modals"

block ui-stylesheet
  link(rel="stylesheet" href="/css/pages/docs/ui/modals.min.css")

block documents
  .document
    article.article.article-full
      :markdown
        Modals in Kickstart are unique in that their backdrop and containers
        are one HTML element. This makes working with modals in JavaScript
        incredibly straightforward.

      #sampleModal.modal
        header
          h1.toc-exempt Modal
          a(data-modal-close="true" href="#") &times;

        main
          p Hi, I'm a modal.
        footer
          ul
            li
              a#sampleModalClose.button.button-primary(role="button" href="#") Close

      button.button.button-primary#launchSampleModal Launch modal

  .document
    article.article
      h1 JavaScript
      p
        | Turn any element into a modal using&nbsp;
        code k$.modal()

    article.code
      :markdown
        <span>
        
            // Instantiate and assign your modal in one line.
            var $signup = k$.modal(".signup");

      .ifnot-semantic
        :markdown
          <span>
          
              <div class="modal signup">
                ...
              </div>

      .ifnot-jquery
        :markdown
          <span>

              // Show modal
              $signup.style.display = 'block'

              // Hide modal
              $signup.style.display = 'none'

      .if-semantic
        :markdown
          <span>

              <div class="signup">
                ...
              </div>

              .signup { 
                @include modal();
              }

      .if-jquery
        :markdown
          <span>

              // Show modal
              $($signup).show();

              // Hide modal
              $($signup).hide();

  .document
    article.article
      h1 Events
      :markdown
        Stopping propagation on any click you don't wish to close the modal is
        required.

        Notice the `e` (event) in the function params as well as
        `e.stopPropagation()`. This is to prevent "event bubbling," which would cause
        JavaScript to think you are both clicking on the modal and clicking outside
        of it (which would close the modal.) 

    article.code
      .if-jquery
        :markdown
          <span>

              $('button').click(function(e) {
                $($modal).show();
                e.stopPropagation();
              });

      .ifnot-jquery
        :markdown
          <span>

              $button = document.querySelector('#myButton');

              $button.addEventListener('click', function(e) {
                $modal.style.display = 'block';
                e.stopPropagation();
              })

  .document
    article.article
      h1 Styling
      p
        | For default modal styling (not required to function),
        span.if-semantic
          |  just include&nbsp;
          code modal()
        span.ifnot-semantic
          |  use the&nbsp;
          code .modal
          |  class.

    article.code
      .if-semantic
        :markdown
          <span>

              <div class="myModal">
                <h1>Hello</h1>
              </div>

              .myModal {
                @include modal();
              }

      .ifnot-semantic
        :markdown
          <span>

              <div class="modal">
                <h1>Hello</h1>
              </div>

  .document
    article.article
      :markdown
        By default, the modal doesn't come with much styling. This is to allow for more
        creativity in styling the contents.

        However, by structuring the direct children as HTML5 `header`, `main`, and `footer`,
        the modal will take on some clean styling for showing as a window.

      .example
        .modal-example.override
          header
            h1.toc-exempt How would you like to pay?
            a(data-modal-close="true" href="#") &times;

          main
            p Please make a selection:
            ul
              li: a(href="#") Visa
              li: a(href="#") Mastercard
              li: a(href="#") American Express

          footer
            ul
              li
                a.button(role="button" href="#") Cancel
                | &nbsp;
              li: a.button.button-primary(role="button" href="#") Next &raquo;

    article.code
      :markdown
        <span>

            <aside class="modal">
              <header>
                <h1>How would you like to pay?</h1>
                <a data-modal-close="true" href="#">&times;</a>
              </header>
              <main>
                <p>Please make a selection</p>
                <ul>
                  <li>
                    <a href="#">Visa</a>
                  </li>
                  <li>
                    <a href="#">Mastercard</a>
                  </li>
                  <li>
                    <a href="#">American Express</a>
                  </li>
                </ul>
              </main>
              <footer>
                <ul>
                  <li>
                    <a class="button" role="button" href="#">Cancel</a>
                  </li>
                  <li>
                    <a class="button button-primary" role="button" href="#">Next &raquo;</a>
                  </li>
                </ul>
              </footer>
            </aside>

      .if-semantic
        :markdown
          <span>

              .modal {
                @include modal();
              }

block postDocsJS
  script.
    $sampleModal = k$.modal('#sampleModal');
    k$.$('#launchSampleModal').addEventListener('click', function(e) {
      $sampleModal.style.display = 'block';
      e.stopPropagation();
    })
    k$.$('#sampleModalClose').addEventListener('click', function() {
      k$.$('#sampleModal').style.display = 'none'
    });
