extends ../../../_layout

mixin buttonRole
  p 
    span.notice Use roles
    |  Especially in navigation bars, it's important to use <code>role="button"</code> in the HTML attributes.

block variables
  - var showFooter = false
  - var title = "Buttons" 

block ui-stylesheet
  link(rel="stylesheet" href="/css/pages/docs/ui/buttons.min.css")

block hero-title
  h1 Buttons

block documents
  .document
    article.article
      :markdown
        Buttons are based on the most basic and reused styling in Kickstart.
        They can easily be placed in navbars and other elements, and can be extended in
        functionality via dropdowns and sizing.

        Buttons can be created from several elements:

      .example
        button.button Sign Up
        | &nbsp;
        a.button(href="#") Sign Up
        | &nbsp;
        input.button(type="submit" value="Sign Up")

    article.code
      .if-semantic
        :markdown
          <span>

              <button class="signup">Sign up</button>
              <a href="#" class="signup">Sign up</a>
              <input type="submit" class="signup" value="Sign up" />

              .signup {
                @include button();
              }

      .ifnot-semantic
        :markdown
          <span>

              <button class="button">Sign up</button>
              <a href="#" class="button">Sign up</a>
              <input type="submit" class="button" value="Sign up" />

  .document
    article.article
      h1 Colors

      .ifnot-semantic
        :markdown
          For colored buttons, simply add the `.button-` class of one of the primary colors
          to the `.button` class.

        +available-colors('button')

      .if-semantic 
        :markdown
          For colored buttons, simply pass in a color to `button()`.

      .example
        button.button.button-green Send
        | &nbsp;
        button.button.button-red Delete
        | &nbsp;
        button.button.button-blue Info
        | &nbsp;
        button.button Cancel

      .if-semantic
        :markdown
          If you have already defined the element as a button, it is
          better to use the `button-color()` mixin. This is the same
          mixin used from inside of `button()`. Using this method avoids
          repetitive CSS.


    article.code
      .ifnot-semantic
        :markdown
          <span>

              <button class="button button-green">Send</button>
              <button class="button button-red">Delete</button>
              <button class="button button-blue">Info</button>
              <button class="button">Cancel</button> 

      .if-semantic
        :markdown
          <span>

              <button class="send">Send</button>
              <button class="delete">Delete</button>
              <button class="info">Info</button>
              <button class="cancel">Cancel</button>

        :markdown
          <span>

              .send {
                @include button(map-get($colors, green));
              }
              .delete {
                @include button(map-get($colors, red));
              }
              .info {
                @include button();
                @include button-color('#6495ed');
                // Just to show an example of button-color().
                // The color could also be passed in to the $color
                // parameter of button()
              }
              .cancel {
                @include button();
              }

  .document
    article.article
      :markdown
        # Groups

        Button groups are nothing more than `<ul>`s with button styling applied to each
        `<li>`. Border rounding is automatically removed on sandwiched buttons.

        This is also used to create dropdown buttons.

      .example
        ul.button-group
          li
            a(href="#") Create
          li
            a(href="#") Read
          li
            a(href="#") Update
          li
            a(href="#") Delete

    article.code
      :markdown
        <span>

            <ul class="button-group" role="button">
              <li>
                <a href="#">Create</a>
              </li>
              <li>
                <a href="#">Read</a>
              </li>
              <li>
                <a href="#">Update</a>
              </li>
              <li>
                <a href="#">Delete</a>
              </li>
            </ul>

      .if-semantic
        :markdown
          <span>

              .button-group {
                @include button-group();
              }
  
  .document
    article.article
      :markdown
        # Button with dropdown

        This is a bit different from the above only because the button still
        exists with the dropdown instead of as one.


      .example
        ul.button-group
          li
            a(href="#") Upload
          li
            button.button-dropdown
            ul
              li
                a(href="#") Choose from library
              li
                a(href="#") Take a picture

      +buttonRole
      p
        span.notice Important!
        |  The <code>.button-dropdown</code> class is a required class

    article.code
      :markdown
        <span>

            <ul class="button-group" role="button">
              <li>
                <a href="#">Upload</a>
              </li>
              <li>
                <button class="button-dropdown"></button>
                <ul>
                  <li>
                    <a href="#">Choose from library</a>
                  </li>
                  <li>
                    <a href="#">Take a picture</a>
                  </li>
                </ul>
              </li>
            </ul>

      .if-semantic
        :markdown
          <span>

              .button-group {
                @include button-group();
              }


  .document
    article.article
      :markdown
        # Dropdown button

        Dropdown buttons are simply collapsible lists that look like buttons.

      +buttonRole

      .alert.alert-info
        p
          span.notice Use the button element.
          |  Unlike regular buttons, dropdown buttons must actually be created with the <code>&lt;button&gt;</code> element.


      .example
        button
          | Add photo
          ul
            li
              a(href="#") Upload
            li
              a(href="#") Choose from library
            li
              a(href="#") Take a picture

    article.code
      :markdown
        <span>

            <button class="button" role="button">
              Add photo
              <ul>
                <li>
                  <a href="#">Upload</a>
                </li>
                <li>
                  <a href="#">Choose from library</a>
                </li>
                <li>
                  <a href="#">Take a picture</a>
                </li>
              </ul>
            </button>

      .if-semantic
        :markdown
          <span>

              .button {
                @include button();
              }

  .document
    article.article
      :markdown
        # Sizes
        
      .if-semantic
        :markdown
          Button sizes are expressed as a multiple of the button's current size.
          For example, a size of 2 would be 2x the size of a default button.

          If you have already defined this element as a button, it is better to use
          the `button-size()` mixin. This is the same mixin called from inside of
          `button()` to generate sizing styles. Using this method avoids duplicate
          CSS.

      .ifnot-semantic
        :markdown
          Use `button-small` or `button-large` for large and small buttons.

      .example
        .row
          .col-4
            ul.list-unstyled
              li
                button.button.button-large Large
              li
                button.button Regular
              li
                button.button.button-small Small

          .col-4
            ul.list-unstyled
              li
                ul.button-group.button-large
                  li
                    button Large
                  li
                    button.button-dropdown
                    ul
                      li
                        a(href="#") Option 1
                      li
                        a(href="#") Option 2

              li
                ul.button-group
                  li
                    button Regular
                  li
                    button.button-dropdown
                    ul
                      li
                        a(href="#") Option 1
                      li
                        a(href="#") Option 2

              li
                ul.button-group.button-small
                  li
                    button Small
                  li
                    button.button-dropdown
                    ul
                      li
                        a(href="#") Option 1
                      li
                        a(href="#") Option 2

          .col-4
            ul.list-unstyled
              li
                button.button.button-large
                  | Large
                  ul.button-dropdown
                    li
                      a(href="#") Option 1
                    li
                      a(href="#") Option 2

              li
                button.button
                  | Regular
                  ul
                    li
                      a(href="#") Option 1
                    li
                      a(href="#") Option 2

              li
                button.button.button-small
                  | Small
                  ul
                    li
                      a(href="#") Option 1
                    li
                      a(href="#") Option 2

    article.code
      .if-semantic
        :markdown
          <span>

               .button {
                 @include button($size: 1); // Default size
               }
               .button.button-large
                 @include button-size(1.2); // Large
               }
               .button.button-small
                 @include button-size(0.85); // Small
               }

      :markdown
        <span>

            <button class="button button-large">Large</button>
            <button class="button">Regular</button>
            <button class="button button-small">Small</button>

            <ul class="button-group button-large">
              <li>
                <button class="button">Large</button>
              </li>
              <li>
                <button class="button-dropdown"></button>
                <ul>
                  ...
                </ul>
            </ul>

            <ul class="button-group">
              <li>
                <button class="button">Regular</button>
              </li>
              <li>
                <button class="button-dropdown"></button>
                <ul>
                  ...
                </ul>
            </ul>

            <ul class="button-group button-small">
              <li>
                <button class="button">Small</button>
              </li>
              <li>
                <button class="button-dropdown"></button>
                <ul>
                  ...
                </ul>
            </ul>

            <button class="button button-large">
              Large
              <ul class="button-dropdown">
                ...
              </ul>
            </button>

            <button class="button">
              Regular
              <ul class="button-dropdown">
                ...
              </ul>
            </button>

            <button class="button button-small">
              Small
              <ul class="button-dropdown">
                ...
              </ul>
            </button>

  .document
    article.article
      h1 Mixing
      p Mix colors, sizes, and button types.

      .example
        .row
          .col-4
            ul.list-unstyled
              li
                button.button.button-large.button-blue Large
              li
                button.button.button-red Regular
              li
                button.button.button-small.button-orange Small

          .col-4
            ul.list-unstyled
              li
                ul.button-group.button-large.button-green
                  li
                    button Large
                  li
                    button.button-dropdown
                    ul
                      li
                        a(href="#") Option 1
                      li
                        a(href="#") Option 2

              li
                ul.button-group.button-violet
                  li
                    button Regular
                  li
                    button.button-dropdown
                    ul
                      li
                        a(href="#") Option 1
                      li
                        a(href="#") Option 2

              li
                ul.button-group.button-small.button-red
                  li
                    button Small
                  li
                    button.button-dropdown
                    ul
                      li
                        a(href="#") Option 1
                      li
                        a(href="#") Option 2

          .col-4
            ul.list-unstyled
              li
                button.button.button-large.button-green
                  | Large
                  ul.button-dropdown
                    li
                      a(href="#") Option 1
                    li
                      a(href="#") Option 2

              li
                button.button.button-yellow
                  | Regular
                  ul
                    li
                      a(href="#") Option 1
                    li
                      a(href="#") Option 2

              li
                button.button.button-small.button-red
                  | Small
                  ul
                    li
                      a(href="#") Option 1
                    li
                      a(href="#") Option 2

    article.code
      :markdown
        <span>

            // See above examples for markup

  .if-semantic
    .document
      article.article
        :markdown
          To specify a both a color and size, specify a scale for `$size` (1 = 100%)
          and a color for `$background-color`

      article.code
        :markdown
          <span>

               .button.button-large
                 @include button($background-color: #EEEEEE, $size: 1.2); // Large
               }

